SELECT EMP_NAME, NVL(DEPT_TITLE, '부서없음') AS DEPT_TITLE, SALARY
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE NVL(DEPT_TITLE, '부서없음') = '부서없음';

SELECT EMP_NAME, JOB_NAME, SALARY, SALARY*12
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE JOB_NAME IN('대리')
AND SALARY > 1000000;

--		입사일을 입력("2022-09-06") 받아
--		입력받은 값 보다 먼저 입사한 사람의
--		이름, 입사일(1990년 01월 01일), 성별(M, F) 조회

SELECT EMP_NAME 이름,
	TO_CHAR(HIRE_DATE, 'YYYY"년" MM"월" DD"일"') 입사일,
	DECODE(SUBSTR(EMP_NO, 8, 1), '1', 'M', '2', 'F') 성별
FROM EMPLOYEE
WHERE HIRE_DATE < TO_DATE('2000-09-06');
					--> TO_DATE 생략 가능(문자열이 날짜형식이라서)

-- 전체 사원 정보 조회
SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, 
NVL(DEPT_TITLE, '부서없음') DEPT_TITLE, JOB_NAME, SALARY
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN JOB USING(JOB_CODE);

-- 사번이 일치하는 사원 정보 조회
SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, 
NVL(DEPT_TITLE, '부서없음') DEPT_TITLE, JOB_NAME, SALARY
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN JOB USING(JOB_CODE)
WHERE EMP_ID = 200;

-- 주민등록번호가 일치하는 사원 정보 조회
SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, 
NVL(DEPT_TITLE, '부서없음') DEPT_TITLE, JOB_NAME, SALARY
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN JOB USING(JOB_CODE)
WHERE EMP_NO = '621231-1985634';

DELETE FROM EMPLOYEE
WHERE EMP_ID =100;

SELECT * FROM EMPLOYEE;
ROLLBACK;

--입력 받은 부서와 일치하는 모든 사원 정보 조회
SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, 
NVL(DEPT_TITLE, '부서없음') DEPT_TITLE, JOB_NAME, SALARY
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN JOB USING(JOB_CODE)
WHERE DEPT_TITLE = '총무부';

--입력 받은 급여 이상을 받는 모든 사원 정보 조회
SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, 
NVL(DEPT_TITLE, '부서없음') DEPT_TITLE, JOB_NAME, SALARY
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN JOB USING(JOB_CODE)
WHERE SALARY >= 2000000;

-- 부서별 부서별 급여 합 전체 조회
SELECT NVL(DEPT_TITLE, '부서없음') DEPT_TITLE, SUM(SALARY) SALARY
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
GROUP BY DEPT_TITLE;

-- 직급별 급여 평균 조회
SELECT JOB_NAME, ROUND(AVG(SALARY), 1) SALARY
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
GROUP BY JOB_NAME;

